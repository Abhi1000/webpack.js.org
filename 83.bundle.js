webpackJsonp([83],{304:function(n,s,a){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.default='<p>This package allows transpiling JavaScript files using undefined and undefined.</p>\n<p><strong>Notes:</strong> Issues with the output should be reported on the babel undefined.</p>\n<h2 id="install">Install<a href="#install" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<blockquote>\n<p>webpack 3.x | babel-loader 8.x | babel 7.x</p>\n</blockquote>\n<pre><code class="hljs language-bash"><span class="token function">npm</span> <span class="token function">install</span> <span class="token string">"babel-loader@^8.0.0-beta"</span> @babel/core @babel/preset-env webpack</code></pre>\n<blockquote>\n<p>webpack 3.x babel-loader 7.x | babel 6.x</p>\n</blockquote>\n<pre><code class="hljs language-bash"><span class="token function">npm</span> <span class="token function">install</span> babel-loader babel-core babel-preset-env webpack</code></pre>\n<h2 id="usage">Usage<a href="#usage" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>undefined</p>\n<p>Within your webpack configuration object, you\'ll need to add the babel-loader to the list of modules, like so:</p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n  rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      test<span class="token punctuation">:</span> <span class="token regex">/\\.js$/</span><span class="token punctuation">,</span>\n      exclude<span class="token punctuation">:</span> <span class="token regex">/(node_modules|bower_components)/</span><span class="token punctuation">,</span>\n      use<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        loader<span class="token punctuation">:</span> <span class="token string">\'babel-loader\'</span><span class="token punctuation">,</span>\n        options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          presets<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'@babel/preset-env\'</span><span class="token punctuation">]</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span></code></pre>\n<h2 id=""></h2>\n<p>See the <code>babel</code> undefined.</p>\n<p>You can pass options to the loader by using the undefined:</p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n  rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      test<span class="token punctuation">:</span> <span class="token regex">/\\.js$/</span><span class="token punctuation">,</span>\n      exclude<span class="token punctuation">:</span> <span class="token regex">/(node_modules|bower_components)/</span><span class="token punctuation">,</span>\n      use<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        loader<span class="token punctuation">:</span> <span class="token string">\'babel-loader\'</span><span class="token punctuation">,</span>\n        options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          presets<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'@babel/preset-env\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n          plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'@babel/plugin-proposal-object-rest-spread\'</span><span class="token punctuation">)</span><span class="token punctuation">]</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span></code></pre>\n<p>This loader also supports the following loader-specific option:</p>\n<ul>\n<li>\n<p><code>cacheDirectory</code>: Default <code>false</code>. When set, the given directory will be used to cache the results of the loader. Future webpack builds will attempt to read from the cache to avoid needing to run the potentially expensive Babel recompilation process on each run. If the value is blank (<code>loader: \'babel-loader?cacheDirectory\'</code>) or <code>true</code> (<code>loader: babel-loader?cacheDirectory=true</code>) the loader will use the default cache directory in <code>node_modules/.cache/babel-loader</code> or fallback to the default OS temporary file directory if no <code>node_modules</code> folder could be found in any root directory.</p>\n</li>\n<li>\n<p><code>cacheIdentifier</code>: Default is a string composed by the babel-core\'s version, the babel-loader\'s version, the contents of .babelrc file if it exists and the value of the environment variable <code>BABEL_ENV</code> with a fallback to the <code>NODE_ENV</code> environment variable. This can be set to a custom value to force cache busting if the identifier changes.</p>\n</li>\n<li>\n<p><code>babelrc</code>: Default <code>true</code>. When <code>false</code>, no options from <code>.babelrc</code> files will be used; only the options passed to\n<code>babel-loader</code> will be used.</p>\n</li>\n</ul>\n<p><strong>Note:</strong> The <code>sourceMap</code> option is ignored, instead sourceMaps are automatically enabled when webpack is configured to use them (via the <code>devtool</code> config option).</p>\n<h2 id="troubleshooting">Troubleshooting<a href="#troubleshooting" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<h3 id="babel-loader-is-slow">babel-loader is slow!<a href="#babel-loader-is-slow" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Make sure you are transforming as few files as possible. Because you are probably\nmatching <code>/\\.js$/</code>, you might be transforming the <code>node_modules</code> folder or other unwanted\nsource.</p>\n<p>To exclude <code>node_modules</code>, see the <code>exclude</code> option in the <code>loaders</code> config as documented above.</p>\n<p>You can also speed up babel-loader by as much as 2x by using the <code>cacheDirectory</code> option.\nThis will cache transformations to the filesystem.</p>\n<h3 id="babel-is-injecting-helpers-into-each-file-and-bloating-my-code">babel is injecting helpers into each file and bloating my code!<a href="#babel-is-injecting-helpers-into-each-file-and-bloating-my-code" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>babel uses very small helpers for common functions such as <code>_extend</code>. By default\nthis will be added to every file that requires it.</p>\n<p>You can instead require the babel runtime as a separate module to avoid the duplication.</p>\n<p>The following configuration disables automatic per-file runtime injection in babel, instead\nrequiring <code>babel-plugin-transform-runtime</code> and making all helper references use it.</p>\n<p>See the undefined for more information.</p>\n<p><strong>NOTE:</strong> You must run <code>npm install @babel/plugin-transform-runtime --save-dev</code> to include this in your project and <code>babel-runtime</code> itself as a dependency with <code>npm install @babel/runtime --save</code>.</p>\n<pre><code class="hljs language-javascript">rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n  <span class="token comment">// the \'transform-runtime\' plugin tells babel to require the runtime</span>\n  <span class="token comment">// instead of inlining it.</span>\n  <span class="token punctuation">{</span>\n    test<span class="token punctuation">:</span> <span class="token regex">/\\.js$/</span><span class="token punctuation">,</span>\n    exclude<span class="token punctuation">:</span> <span class="token regex">/(node_modules|bower_components)/</span><span class="token punctuation">,</span>\n    use<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      loader<span class="token punctuation">:</span> <span class="token string">\'babel-loader\'</span><span class="token punctuation">,</span>\n      options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        presets<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'@babel/preset-env\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'@babel/plugin-transform-runtime\'</span><span class="token punctuation">]</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span></code></pre>\n<h4 id="note-transform-runtime--custom-polyfills-eg-promise-library"><strong>NOTE:</strong> transform-runtime &#x26; custom polyfills (e.g. Promise library)<a href="#note-transform-runtime--custom-polyfills-eg-promise-library" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p>Since undefined includes a polyfill that includes a custom undefined and undefined, the following usual shimming method using <code>webpack.ProvidePlugin</code> will not work:</p>\n<pre><code class="hljs language-javascript"><span class="token comment">// ...</span>\n        <span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>ProvidePlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            <span class="token string">\'Promise\'</span><span class="token punctuation">:</span> <span class="token string">\'bluebird\'</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token comment">// ...</span></code></pre>\n<p>The following approach will not work either:</p>\n<pre><code class="hljs language-javascript"><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'@babel/runtime/core-js/promise\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">default</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'bluebird\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">var</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">;</span></code></pre>\n<p>which outputs to (using <code>runtime</code>):</p>\n<pre><code class="hljs language-javascript"><span class="token string">\'use strict\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">var</span> _Promise <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'@babel/runtime/core-js/promise\'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">\'default\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'@babel/runtime/core-js/promise\'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">\'default\'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'bluebird\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">var</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">_Promise</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p>The previous <code>Promise</code> library is referenced and used before it is overridden.</p>\n<p>One approach is to have a "bootstrap" step in your application that would first override the default globals before your application:</p>\n<pre><code class="hljs language-javascript"><span class="token comment">// bootstrap.js</span>\n\n<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'@babel/runtime/core-js/promise\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">default</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'bluebird\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// ...</span>\n\n<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'./app\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<h3 id="the-node-api-for-babel-has-been-moved-to-babel-core">The node API for <code>babel</code> has been moved to <code>babel-core</code>.<a href="#the-node-api-for-babel-has-been-moved-to-babel-core" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>If you receive this message it means that you have the npm package <code>babel</code> installed and use the short notation of the loader in the webpack config (which is not valid anymore as of webpack 2.x):</p>\n<pre><code class="hljs language-js">  <span class="token punctuation">{</span>\n    test<span class="token punctuation">:</span> <span class="token regex">/\\.js$/</span><span class="token punctuation">,</span>\n    loader<span class="token punctuation">:</span> <span class="token string">\'babel\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span></code></pre>\n<p>Webpack then tries to load the <code>babel</code> package instead of the <code>babel-loader</code>.</p>\n<p>To fix this you should uninstall the npm package <code>babel</code> as it is deprecated in babel v6. (instead install <code>babel-cli</code> or <code>babel-core</code>)\nIn the case one of your dependencies is installing <code>babel</code> and you cannot uninstall it yourself, use the complete name of the loader in the webpack config:</p>\n<pre><code class="hljs language-js">  <span class="token punctuation">{</span>\n    test<span class="token punctuation">:</span> <span class="token regex">/\\.js$/</span><span class="token punctuation">,</span>\n    loader<span class="token punctuation">:</span> <span class="token string">\'babel-loader\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span></code></pre>\n<h2 id="customized-loader">Customized Loader<a href="#customized-loader" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p><code>babel-loader</code> exposes a loader-builder utility that allows users to add custom handling\nof Babel\'s configuration for each file that it processes.</p>\n<p><code>.custom</code> accepts a callback that will be called with the loader\'s instance of\n<code>babel</code> so that tooling can ensure that it using exactly the same <code>@babel/core</code>\ninstance as the loader itself.</p>\n<h3 id="example">Example<a href="#example" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"babel-loader"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">custom</span><span class="token punctuation">(</span>babel <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">function</span> <span class="token function">myPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      visitor<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">{</span>\n    <span class="token comment">// Passed the loader options.</span>\n    <span class="token function">customOptions</span><span class="token punctuation">(</span><span class="token punctuation">{</span> opt1<span class="token punctuation">,</span> opt2<span class="token punctuation">,</span> <span class="token operator">...</span>loader <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token punctuation">{</span>\n        <span class="token comment">// Pull out any custom options that the loader might have.</span>\n        custom<span class="token punctuation">:</span> <span class="token punctuation">{</span> opt1<span class="token punctuation">,</span> opt2 <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n        <span class="token comment">// Pass the options back with the two custom options removed.</span>\n        loader<span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n    <span class="token comment">// Passed Babel\'s \'PartialConfig\' object. </span>\n    <span class="token function">config</span><span class="token punctuation">(</span>cfg<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>cfg<span class="token punctuation">.</span><span class="token function">hasFilesystemConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// Use the normal config</span>\n        <span class="token keyword">return</span> cfg<span class="token punctuation">.</span>options<span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n\n      <span class="token keyword">return</span> <span class="token punctuation">{</span>\n        <span class="token operator">...</span>cfg<span class="token punctuation">.</span>options<span class="token punctuation">,</span>\n        plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token operator">...</span><span class="token punctuation">(</span>cfg<span class="token punctuation">.</span>options<span class="token punctuation">.</span>plugins <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n\n          <span class="token comment">// Include a custom plugin in the options.</span>\n          myPlugin<span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n    <span class="token function">result</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token punctuation">{</span>\n        <span class="token operator">...</span>result<span class="token punctuation">,</span>\n        code<span class="token punctuation">:</span> result<span class="token punctuation">.</span>code <span class="token operator">+</span> <span class="token string">"\\n// Generated by some custom loader"</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<h3 id="customoptionsoptions-object--custom-object-loader-object-"><code>customOptions(options: Object): { custom: Object, loader: Object }</code><a href="#customoptionsoptions-object--custom-object-loader-object-" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Given the loader\'s options, split custom options out of <code>babel-loader</code>\'s\noptions.</p>\n<h3 id="configcfg-partialconfig-object"><code>config(cfg: PartialConfig): Object</code><a href="#configcfg-partialconfig-object" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Given Babel\'s <code>PartialConfig</code> object, return the <code>options</code> object that should\nbe passed to <code>babel.transform</code>.</p>\n<h3 id="resultresult-result-result"><code>result(result: Result): Result</code><a href="#resultresult-result-result" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Given Babel\'s result object, allow loaders to make additional tweaks to it.</p>\n<h2 id="undefined">undefined<a href="#undefined" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n'}});