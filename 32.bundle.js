webpackJsonp([32],{355:function(n,s,a){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.default='<p>Copies individual files or entire directories to the build directory</p>\n<h2 id="install">Install<a href="#install" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<pre><code class="hljs language-bash"><span class="token function">npm</span> i -D copy-webpack-plugin</code></pre>\n<h2 id="usage">Usage<a href="#usage" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> CopyWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'copy-webpack-plugin\'</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">CopyWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token operator">...</span>patterns <span class="token punctuation">]</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span></code></pre>\n<blockquote>\n<p>ℹ️ If you want <code>webpack-dev-server</code> to write files to the output directory during development, you can force it with the undefined.</p>\n</blockquote>\n<h2 id=""></h2>\n<p>A simple pattern looks like this</p>\n<pre><code class="hljs language-js"><span class="token punctuation">{</span> <span class="token keyword">from</span><span class="token punctuation">:</span> <span class="token string">\'source\'</span><span class="token punctuation">,</span> to<span class="token punctuation">:</span> <span class="token string">\'dest\'</span> <span class="token punctuation">}</span></code></pre>\n<p>Or, in case of just a <code>from</code> with the default destination, you can also use a <code>{String}</code> as shorthand instead of an <code>{Object}</code></p>\n<pre><code class="hljs language-js"><span class="token string">\'source\'</span></code></pre>\n<table>\n<thead>\n<tr>\n<th align="center">Name</th>\n<th align="center">Type</th>\n<th align="center">Default</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p>undefined<p class="description mobile"><code>{String\\|Object}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{String\\|Object}</code></td>\n<td align="center"><code>undefined</code></td>\n<td align="left">Globs accept undefined</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p>undefined<p class="description mobile"><code>{Object}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Object}</code></td>\n<td align="center"><code>{ cwd: context }</code></td>\n<td align="left">See the undefined in addition to the ones below</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p>undefined<p class="description mobile"><code>{String\\|Object}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{String\\|Object}</code></td>\n<td align="center"><code>undefined</code></td>\n<td align="left">Output root if \n<code>from</code>\n is file or dir, resolved glob path if \n<code>from</code>\n is glob</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p>undefined<p class="description mobile"><code>{String}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{String}</code></td>\n<td align="center"><code></code>\n|undefined</td>\n<td align="left"></td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p>undefined<p class="description mobile"><code>{RegExp}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{RegExp}</code></td>\n<td align="center"><code></code>\n|Pattern for extracting elements to be used in \n<code>to</code>\n templates</td>\n<td align="left"></td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p>undefined<p class="description mobile"><code>{Boolean}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Boolean}</code></td>\n<td align="center"><code>false</code></td>\n<td align="left">Overwrites files already in \n<code>compilation.assets</code>\n (usually added by other plugins/loaders)</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p>undefined<p class="description mobile"><code>{Array}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Array}</code></td>\n<td align="center"><code>[]</code></td>\n<td align="left">Globs to ignore for this pattern</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><code>flatten</code><p class="description mobile"><code>{Boolean}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Boolean}</code></td>\n<td align="center"><code>false</code></td>\n<td align="left">Removes all directory references and only copies file names.⚠️ If files have the same name, the result is non-deterministic</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p>undefined<p class="description mobile"><code>{Function\\|Promise}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Function\\|Promise}</code></td>\n<td align="center"><code>(content, path) => content</code></td>\n<td align="left">Function or Promise that modifies file contents before copying</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p>undefined<p class="description mobile"><code>{Boolean\\|Object}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Boolean\\|Object}</code></td>\n<td align="center"><code>false</code></td>\n<td align="left">Enable \n<code>transform</code>\n caching. You can use \n<code>{ cache: { key: \'my-cache-key\' } }</code>\n to invalidate the cache</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p>undefined<p class="description mobile"><code>{String}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{String}</code></td>\n<td align="center"><code>options.context \\|\\| compiler.options.context</code></td>\n<td align="left">A path that determines how to interpret the \n<code>from</code>\n path</td>\n</tr>\n</tbody>\n</table>\n<h3 id="from"><code>from</code><a href="#from" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">[</span>\n  <span class="token keyword">new</span> <span class="token class-name">CopyWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n    <span class="token string">\'relative/path/to/file.ext\'</span><span class="token punctuation">,</span>\n    <span class="token string">\'/absolute/path/to/file.ext\'</span><span class="token punctuation">,</span>\n    <span class="token string">\'relative/path/to/dir\'</span><span class="token punctuation">,</span>\n    <span class="token string">\'/absolute/path/to/dir\'</span><span class="token punctuation">,</span>\n    <span class="token string">\'**/*\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> glob<span class="token punctuation">:</span> <span class="token string">\'\\*\\*/\\*\'</span><span class="token punctuation">,</span> dot<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span>\n<span class="token punctuation">]</span></code></pre>\n<h3 id="to"><code>to</code><a href="#to" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">[</span>\n  <span class="token keyword">new</span> <span class="token class-name">CopyWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n    <span class="token punctuation">{</span> <span class="token keyword">from</span><span class="token punctuation">:</span> <span class="token string">\'**/*\'</span><span class="token punctuation">,</span> to<span class="token punctuation">:</span> <span class="token string">\'relative/path/to/dest/\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> <span class="token keyword">from</span><span class="token punctuation">:</span> <span class="token string">\'**/*\'</span><span class="token punctuation">,</span> to<span class="token punctuation">:</span> <span class="token string">\'/absolute/path/to/dest/\'</span> <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span>\n<span class="token punctuation">]</span></code></pre>\n<h3 id="totype"><code>toType</code><a href="#totype" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<table>\n<thead>\n<tr>\n<th align="center">Name</th>\n<th align="center">Type</th>\n<th align="center">Default</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><code>\'dir\'</code></strong><p class="description mobile"><code>{String}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{String}</code></td>\n<td align="center"><code>undefined</code></td>\n<td align="left">If \n<code>from</code>\n is directory, \n<code>to</code>\n has no extension or ends in \n<code>\'/\'</code></td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><code>\'file\'</code></strong><p class="description mobile"><code>{String}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{String}</code></td>\n<td align="center"><code>undefined</code></td>\n<td align="left">If \n<code>to</code>\n has extension or \n<code>from</code>\n is file</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><code>\'template\'</code></strong><p class="description mobile"><code>{String}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{String}</code></td>\n<td align="center"><code>undefined</code></td>\n<td align="left">If \n<code>to</code>\n contains undefined</td>\n</tr>\n</tbody>\n</table>\n<h4 id="dir"><code>\'dir\'</code><a href="#dir" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">[</span>\n  <span class="token keyword">new</span> <span class="token class-name">CopyWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token keyword">from</span><span class="token punctuation">:</span> <span class="token string">\'path/to/file.txt\'</span><span class="token punctuation">,</span>\n      to<span class="token punctuation">:</span> <span class="token string">\'directory/with/extension.ext\'</span><span class="token punctuation">,</span>\n      toType<span class="token punctuation">:</span> <span class="token string">\'dir\'</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span>\n<span class="token punctuation">]</span></code></pre>\n<h4 id="file"><code>\'file\'</code><a href="#file" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">[</span>\n  <span class="token keyword">new</span> <span class="token class-name">CopyWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token keyword">from</span><span class="token punctuation">:</span> <span class="token string">\'path/to/file.txt\'</span><span class="token punctuation">,</span>\n      to<span class="token punctuation">:</span> <span class="token string">\'file/without/extension\'</span><span class="token punctuation">,</span>\n      toType<span class="token punctuation">:</span> <span class="token string">\'file\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span>\n<span class="token punctuation">]</span></code></pre>\n<h4 id="template"><code>\'template\'</code><a href="#template" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">[</span>\n  <span class="token keyword">new</span> <span class="token class-name">CopyWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token keyword">from</span><span class="token punctuation">:</span> <span class="token string">\'src/\'</span><span class="token punctuation">,</span>\n      to<span class="token punctuation">:</span> <span class="token string">\'dest/[name].[hash].[ext]\'</span><span class="token punctuation">,</span>\n      toType<span class="token punctuation">:</span> <span class="token string">\'template\'</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span>\n<span class="token punctuation">]</span></code></pre>\n<h3 id="test"><code>test</code><a href="#test" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Defines a <code>{RegExp}</code> to match some parts of the file path.\nThese capture groups can be reused in the name property using <code>[N]</code> placeholder.\nNote that <code>[0]</code> will be replaced by the entire path of the file,\nwhereas <code>[1]</code> will contain the first capturing parenthesis of your <code>{RegExp}</code>\nand so on...</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">[</span>\n  <span class="token keyword">new</span> <span class="token class-name">CopyWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token keyword">from</span><span class="token punctuation">:</span> <span class="token string">\'*/*\'</span><span class="token punctuation">,</span>\n      to<span class="token punctuation">:</span> <span class="token string">\'[1]-[2].[hash].[ext]\'</span><span class="token punctuation">,</span>\n      test<span class="token punctuation">:</span> <span class="token regex">/([^/]+)\\/(.+)\\.png$/</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span>\n<span class="token punctuation">]</span></code></pre>\n<h3 id="force"><code>force</code><a href="#force" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">[</span>\n  <span class="token keyword">new</span> <span class="token class-name">CopyWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n    <span class="token punctuation">{</span> <span class="token keyword">from</span><span class="token punctuation">:</span> <span class="token string">\'src/**/*\'</span><span class="token punctuation">,</span> to<span class="token punctuation">:</span> <span class="token string">\'dest/\'</span><span class="token punctuation">,</span> force<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span>\n<span class="token punctuation">]</span></code></pre>\n<h3 id="ignore"><code>ignore</code><a href="#ignore" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">[</span>\n  <span class="token keyword">new</span> <span class="token class-name">CopyWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n    <span class="token punctuation">{</span> <span class="token keyword">from</span><span class="token punctuation">:</span> <span class="token string">\'src/**/*\'</span><span class="token punctuation">,</span> to<span class="token punctuation">:</span> <span class="token string">\'dest/\'</span><span class="token punctuation">,</span> ignore<span class="token punctuation">:</span> <span class="token punctuation">[</span> <span class="token string">\'*.js\'</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span>\n<span class="token punctuation">]</span></code></pre>\n<h3 id="flatten"><code>flatten</code><a href="#flatten" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">[</span>\n  <span class="token keyword">new</span> <span class="token class-name">CopyWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n    <span class="token punctuation">{</span> <span class="token keyword">from</span><span class="token punctuation">:</span> <span class="token string">\'src/**/*\'</span><span class="token punctuation">,</span> to<span class="token punctuation">:</span> <span class="token string">\'dest/\'</span><span class="token punctuation">,</span> flatten<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span>\n<span class="token punctuation">]</span></code></pre>\n<h3 id="transform"><code>transform</code><a href="#transform" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<h4 id="function"><code>{Function}</code><a href="#function" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">[</span>\n  <span class="token keyword">new</span> <span class="token class-name">CopyWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token keyword">from</span><span class="token punctuation">:</span> <span class="token string">\'src/*.png\'</span><span class="token punctuation">,</span>\n      to<span class="token punctuation">:</span> <span class="token string">\'dest/\'</span><span class="token punctuation">,</span>\n      <span class="token function">transform</span> <span class="token punctuation">(</span>content<span class="token punctuation">,</span> path<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token function">optimize</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span>\n<span class="token punctuation">]</span></code></pre>\n<h4 id="promise"><code>{Promise}</code><a href="#promise" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">[</span>\n  <span class="token keyword">new</span> <span class="token class-name">CopyWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token keyword">from</span><span class="token punctuation">:</span> <span class="token string">\'src/*.png\'</span><span class="token punctuation">,</span>\n      to<span class="token punctuation">:</span> <span class="token string">\'dest/\'</span><span class="token punctuation">,</span>\n      <span class="token function">transform</span> <span class="token punctuation">(</span>content<span class="token punctuation">,</span> path<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token function">optimize</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span>\n<span class="token punctuation">]</span></code></pre>\n<h3 id="cache"><code>cache</code><a href="#cache" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">[</span>\n  <span class="token keyword">new</span> <span class="token class-name">CopyWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token keyword">from</span><span class="token punctuation">:</span> <span class="token string">\'src/*.png\'</span><span class="token punctuation">,</span>\n      to<span class="token punctuation">:</span> <span class="token string">\'dest/\'</span><span class="token punctuation">,</span>\n      <span class="token function">transform</span> <span class="token punctuation">(</span>content<span class="token punctuation">,</span> path<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token function">optimize</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      cache<span class="token punctuation">:</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span>\n<span class="token punctuation">]</span></code></pre>\n<h3 id="context"><code>context</code><a href="#context" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">[</span>\n  <span class="token keyword">new</span> <span class="token class-name">CopyWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n    <span class="token punctuation">{</span> <span class="token keyword">from</span><span class="token punctuation">:</span> <span class="token string">\'src/*.txt\'</span><span class="token punctuation">,</span> to<span class="token punctuation">:</span> <span class="token string">\'dest/\'</span><span class="token punctuation">,</span> context<span class="token punctuation">:</span> <span class="token string">\'app/\'</span> <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span>\n<span class="token punctuation">]</span></code></pre>\n<h2 id="options">Options<a href="#options" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<table>\n<thead>\n<tr>\n<th align="center">Name</th>\n<th align="center">Type</th>\n<th align="center">Default</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p>undefined<p class="description mobile"><code>{String}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{String}</code></td>\n<td align="center"><strong><code>\'warning\'</code></strong></td>\n<td align="left">undefined</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p>undefined<p class="description mobile"><code>{Array}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Array}</code></td>\n<td align="center"><code>[]</code></td>\n<td align="left">Array of globs to ignore (applied to \n<code>from</code>\n)</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p>undefined<p class="description mobile"><code>{String}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{String}</code></td>\n<td align="center"><code>compiler.options.context</code></td>\n<td align="left">A path that determines how to interpret the \n<code>from</code>\n path, shared for all patterns</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p>undefined<p class="description mobile"><code>{Boolean}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Boolean}</code></td>\n<td align="center"><code>false</code></td>\n<td align="left">Copies files, regardless of modification when using watch or \n<code>webpack-dev-server</code>\n. All files are copied on first build, regardless of this option</td>\n</tr>\n</tbody>\n</table>\n<h3 id="debug"><code>debug</code><a href="#debug" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<table>\n<thead>\n<tr>\n<th align="center">Name</th>\n<th align="center">Type</th>\n<th align="center">Default</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><code>\'info\'</code></strong><p class="description mobile"><code>{String\\|Boolean}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{String\\|Boolean}</code></td>\n<td align="center"><code>false</code></td>\n<td align="left">File location and read info</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><code>\'debug\'</code></strong><p class="description mobile"><code>{String}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{String}</code></td>\n<td align="center"><code>false</code></td>\n<td align="left">Very detailed debugging info</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><code>\'warning\'</code></strong><p class="description mobile"><code>{String}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{String}</code></td>\n<td align="center"><code>true</code></td>\n<td align="left">Only warnings</td>\n</tr>\n</tbody>\n</table>\n<h4 id="info"><code>\'info\'</code><a href="#info" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">[</span>\n  <span class="token keyword">new</span> <span class="token class-name">CopyWebpackPlugin</span><span class="token punctuation">(</span>\n    <span class="token punctuation">[</span> <span class="token operator">...</span>patterns <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> debug<span class="token punctuation">:</span> <span class="token string">\'info\'</span> <span class="token punctuation">}</span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">]</span></code></pre>\n<h4 id="debug-1"><code>\'debug\'</code><a href="#debug-1" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">[</span>\n  <span class="token keyword">new</span> <span class="token class-name">CopyWebpackPlugin</span><span class="token punctuation">(</span>\n    <span class="token punctuation">[</span> <span class="token operator">...</span>patterns <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> debug<span class="token punctuation">:</span> <span class="token string">\'debug\'</span> <span class="token punctuation">}</span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">]</span></code></pre>\n<h4 id="warning-default"><code>\'warning\' (default)</code><a href="#warning-default" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">[</span>\n  <span class="token keyword">new</span> <span class="token class-name">CopyWebpackPlugin</span><span class="token punctuation">(</span>\n    <span class="token punctuation">[</span> <span class="token operator">...</span>patterns <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> debug<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">]</span></code></pre>\n<h3 id="ignore-1"><code>ignore</code><a href="#ignore-1" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">[</span>\n  <span class="token keyword">new</span> <span class="token class-name">CopyWebpackPlugin</span><span class="token punctuation">(</span>\n    <span class="token punctuation">[</span> <span class="token operator">...</span>patterns <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> ignore<span class="token punctuation">:</span> <span class="token punctuation">[</span> <span class="token string">\'*.js\'</span><span class="token punctuation">,</span> <span class="token string">\'*.css\'</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">]</span></code></pre>\n<h3 id="context-1"><code>context</code><a href="#context-1" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">[</span>\n  <span class="token keyword">new</span> <span class="token class-name">CopyWebpackPlugin</span><span class="token punctuation">(</span>\n    <span class="token punctuation">[</span> <span class="token operator">...</span>patterns <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> context<span class="token punctuation">:</span> <span class="token string">\'/app\'</span> <span class="token punctuation">}</span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">]</span></code></pre>\n<h3 id="copyunmodified"><code>copyUnmodified</code><a href="#copyunmodified" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<blockquote>\n<p>ℹ️ By default, we only copy <strong>modified</strong> files during a <code>webpack --watch</code> or <code>webpack-dev-server</code> build. Setting this option to <code>true</code> will copy all files.</p>\n</blockquote>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">[</span>\n  <span class="token keyword">new</span> <span class="token class-name">CopyWebpackPlugin</span><span class="token punctuation">(</span>\n    <span class="token punctuation">[</span> <span class="token operator">...</span>patterns <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> copyUnmodified<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">]</span></code></pre>\n<h2 id="maintainers">Maintainers<a href="#maintainers" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<table>\n  <tbody>\n    <tr>\n      <td align="center">\n        <a href="https://github.com/bebraw">\n          <img width="150" height="150" src="https://github.com/bebraw.png?v=3&s=150">\n          </br>\n          Juho Vepsäläinen\n        </a>\n      </td>\n      <td align="center">\n        <a href="https://github.com/d3viant0ne">\n          <img width="150" height="150" src="https://github.com/d3viant0ne.png?v=3&s=150">\n          </br>\n          Joshua Wiens\n        </a>\n      </td>\n      <td align="center">\n        <a href="https://github.com/michael-ciniawsky">\n          <img width="150" height="150" src="https://github.com/michael-ciniawsky.png?v=3&s=150">\n          </br>\n          Michael Ciniawsky\n        </a>\n      </td>\n      <td align="center">\n        <a href="https://github.com/evilebottnawi">\n          <img width="150" height="150" src="https://github.com/evilebottnawi.png?v=3&s=150">\n          </br>\n          Alexander Krasnoyarov\n        </a>\n      </td>\n    </tr>\n  <tbody>\n</table>\n'}});