webpackJsonp([25],{362:function(n,s,a){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.default='<p>This plugin uses <a href="https://github.com/mishoo/UglifyJS2/tree/harmony">UglifyJS v3 </a><a href="https://npmjs.com/package/uglify-es">(<code>uglify-es</code>)</a> to minify your JavaScript</p>\n<blockquote>\n<p>ℹ️  <code>webpack &#x3C; v4.0.0</code> currently contains undefined of this plugin under <code>webpack.optimize.UglifyJsPlugin</code> as an alias. For usage of the latest version (<code>v1.0.0</code>), please follow the instructions below. Aliasing <code>v1.0.0</code> as <code>webpack.optimize.UglifyJsPlugin</code> is scheduled for <code>webpack v4.0.0</code></p>\n</blockquote>\n<h2 id="install">Install<a href="#install" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<pre><code class="hljs language-bash"><span class="token function">npm</span> i -D uglifyjs-webpack-plugin</code></pre>\n<h2 id="usage">Usage<a href="#usage" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> UglifyJsPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'uglifyjs-webpack-plugin\'</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  optimization<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    minimizer<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token keyword">new</span> <span class="token class-name">UglifyJsPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>\n<h2 id="options">Options<a href="#options" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<table>\n<thead>\n<tr>\n<th align="center">Name</th>\n<th align="center">Type</th>\n<th align="center">Default</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><code>test</code></strong><p class="description mobile"><code>{RegExp\\|Array&#x3C;RegExp>}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{RegExp\\|Array&#x3C;RegExp>}</code></td>\n<td align="center"><code>\n/\n\\\n.js$/i\n</code></td>\n<td align="left">Test to match files against</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><code>include</code></strong><p class="description mobile"><code>{RegExp\\|Array&#x3C;RegExp>}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{RegExp\\|Array&#x3C;RegExp>}</code></td>\n<td align="center"><code>undefined</code></td>\n<td align="left">Files to \n<code>include</code></td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><code>exclude</code></strong><p class="description mobile"><code>{RegExp\\|Array&#x3C;RegExp>}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{RegExp\\|Array&#x3C;RegExp>}</code></td>\n<td align="center"><code>undefined</code></td>\n<td align="left">Files to \n<code>exclude</code></td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><code>cache</code></strong><p class="description mobile"><code>{Boolean\\|String}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Boolean\\|String}</code></td>\n<td align="center"><code>false</code></td>\n<td align="left">Enable file caching</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><code>cacheKeys</code></strong><p class="description mobile"><code>{Function(defaultCacheKeys, file) -> {Object}}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Function(defaultCacheKeys, file) -> {Object}}</code></td>\n<td align="center"><code>defaultCacheKeys => defaultCacheKeys</code></td>\n<td align="left">Allows you to override default cache keys</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><code>parallel</code></strong><p class="description mobile"><code>{Boolean\\|Number}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Boolean\\|Number}</code></td>\n<td align="center"><code>false</code></td>\n<td align="left">Use multi-process parallel running to improve the build speed</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><code>sourceMap</code></strong><p class="description mobile"><code>{Boolean}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Boolean}</code></td>\n<td align="center"><code>false</code></td>\n<td align="left">Use source maps to map error message locations to modules (This slows down the compilation) ⚠️ \n<strong><code>cheap-source-map</code> options don\'t work with this plugin</strong></td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><code>minify</code></strong><p class="description mobile"><code>{Function}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Function}</code></td>\n<td align="center"><code>undefined</code></td>\n<td align="left">Allows you to override default minify function</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><code>uglifyOptions</code></strong><p class="description mobile"><code>{Object}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Object}</code></td>\n<td align="center">undefined</td>\n<td align="left"><code>uglify</code>\n undefined</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><code>extractComments</code></strong><p class="description mobile"><code>{Boolean\\|RegExp\\|Function&#x3C;(node, comment) -> {Boolean\\|Object}>}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Boolean\\|RegExp\\|Function&#x3C;(node, comment) -> {Boolean\\|Object}>}</code></td>\n<td align="center"><code>false</code></td>\n<td align="left">Whether comments shall be extracted to a separate file, (see undefined (\n<code>webpack >= 2.3.0</code>\n)</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><code>warningsFilter</code></strong><p class="description mobile"><code>{Function(source) -> {Boolean}}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Function(source) -> {Boolean}}</code></td>\n<td align="center"><code>() => true</code></td>\n<td align="left">Allow to filter uglify warnings</td>\n</tr>\n</tbody>\n</table>\n<h2 id=""></h2>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">[</span>\n  <span class="token keyword">new</span> <span class="token class-name">UglifyJsPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    test<span class="token punctuation">:</span> <span class="token regex">/\\.js($|\\?)/i</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">]</span></code></pre>\n<h3 id="include"><code>include</code><a href="#include" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">[</span>\n  <span class="token keyword">new</span> <span class="token class-name">UglifyJsPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    include<span class="token punctuation">:</span> <span class="token regex">/\\/includes/</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">]</span></code></pre>\n<h3 id="exclude"><code>exclude</code><a href="#exclude" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">[</span>\n  <span class="token keyword">new</span> <span class="token class-name">UglifyJsPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    exclude<span class="token punctuation">:</span> <span class="token regex">/\\/excludes/</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">]</span></code></pre>\n<h3 id="cache"><code>cache</code><a href="#cache" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>If you use your own <code>minify</code> function please read the <code>minify</code> section for cache invalidation correctly.</p>\n<h4 id="boolean"><code>{Boolean}</code><a href="#boolean" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">[</span>\n  <span class="token keyword">new</span> <span class="token class-name">UglifyJsPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    cache<span class="token punctuation">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">]</span></code></pre>\n<p>Enable file caching.\nDefault path to cache directory: <code>node_modules/.cache/uglifyjs-webpack-plugin</code>.</p>\n<h4 id="string"><code>{String}</code><a href="#string" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">[</span>\n  <span class="token keyword">new</span> <span class="token class-name">UglifyJsPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    cache<span class="token punctuation">:</span> <span class="token string">\'path/to/cache\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">]</span></code></pre>\n<p>Path to cache directory.</p>\n<h3 id="cachekeys"><code>cacheKeys</code><a href="#cachekeys" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">[</span>\n  <span class="token keyword">new</span> <span class="token class-name">UglifyJsPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    cache<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    cacheKeys<span class="token punctuation">:</span> <span class="token punctuation">(</span>defaultCacheKeys<span class="token punctuation">,</span> file<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      defaultCacheKeys<span class="token punctuation">.</span>myCacheKey <span class="token operator">=</span> <span class="token string">\'myCacheKeyValue\'</span><span class="token punctuation">;</span>\n      \n      <span class="token keyword">return</span> defaultCacheKeys<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">]</span></code></pre>\n<p>Allows you to override default cache keys.</p>\n<p>Default keys:</p>\n<pre><code class="hljs language-js"><span class="token punctuation">{</span>\n  <span class="token string">\'uglify-es\'</span><span class="token punctuation">:</span> versions<span class="token punctuation">.</span>uglify<span class="token punctuation">,</span> <span class="token comment">// uglify version</span>\n  <span class="token string">\'uglifyjs-webpack-plugin\'</span><span class="token punctuation">:</span> versions<span class="token punctuation">.</span>plugin<span class="token punctuation">,</span> <span class="token comment">// plugin version</span>\n  <span class="token string">\'uglifyjs-webpack-plugin-options\'</span><span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">,</span> <span class="token comment">// plugin options</span>\n  path<span class="token punctuation">:</span> compiler<span class="token punctuation">.</span>outputPath <span class="token operator">?</span> <span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>compiler<span class="token punctuation">.</span>outputPath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>file<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span> <span class="token punctuation">:</span> file<span class="token punctuation">,</span> <span class="token comment">// asset path</span>\n  hash<span class="token punctuation">:</span> crypto<span class="token punctuation">.</span><span class="token function">createHash</span><span class="token punctuation">(</span><span class="token string">\'md4\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span><span class="token string">\'hex\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// source file hash</span>\n<span class="token punctuation">}</span></code></pre>\n<h3 id="parallel"><code>parallel</code><a href="#parallel" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<h4 id="boolean-1"><code>{Boolean}</code><a href="#boolean-1" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">[</span>\n  <span class="token keyword">new</span> <span class="token class-name">UglifyJsPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    parallel<span class="token punctuation">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">]</span></code></pre>\n<p>Enable parallelization.\nDefault number of concurrent runs: <code>os.cpus().length - 1</code>.</p>\n<h4 id="number"><code>{Number}</code><a href="#number" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">[</span>\n  <span class="token keyword">new</span> <span class="token class-name">UglifyJsPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    parallel<span class="token punctuation">:</span> <span class="token number">4</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">]</span></code></pre>\n<p>Number of concurrent runs.</p>\n<blockquote>\n<p>ℹ️  Parallelization can speedup your build significantly and is therefore <strong>highly recommended</strong></p>\n</blockquote>\n<h3 id="sourcemap"><code>sourceMap</code><a href="#sourcemap" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>If you use your own <code>minify</code> function please read the <code>minify</code> section for handling source maps correctly.</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">[</span>\n  <span class="token keyword">new</span> <span class="token class-name">UglifyJsPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    sourceMap<span class="token punctuation">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">]</span></code></pre>\n<blockquote>\n<p>⚠️ <strong><code>cheap-source-map</code> options don\'t work with this plugin</strong></p>\n</blockquote>\n<h3 id="minify"><code>minify</code><a href="#minify" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<blockquote>\n<p>⚠️ <strong>Always use <code>require</code> inside <code>minify</code> function when <code>parallel</code> option enabled</strong></p>\n</blockquote>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">[</span>\n  <span class="token keyword">new</span> <span class="token class-name">UglifyJsPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n     <span class="token function">minify</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> sourceMap<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n       <span class="token keyword">const</span> extractedComments <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n       <span class="token comment">// Custom logic for extract comments</span>\n      \n       <span class="token keyword">const</span> <span class="token punctuation">{</span> error<span class="token punctuation">,</span> map<span class="token punctuation">,</span> code<span class="token punctuation">,</span> warnings <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'uglify-module\'</span><span class="token punctuation">)</span> <span class="token comment">// Or require(\'./path/to/uglify-module\')</span>\n         <span class="token punctuation">.</span><span class="token function">minify</span><span class="token punctuation">(</span>\n           file<span class="token punctuation">,</span>\n           <span class="token punctuation">{</span> <span class="token comment">/* Your options for minification */</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n         <span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n       <span class="token keyword">return</span> <span class="token punctuation">{</span> error<span class="token punctuation">,</span> map<span class="token punctuation">,</span> code<span class="token punctuation">,</span> warnings<span class="token punctuation">,</span> extractedComments <span class="token punctuation">}</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">]</span></code></pre>\n<p>By default plugin uses <code>uglify-es</code> package.</p>\n<p>Examples:</p>\n<h4 id="uglify-js"><code>uglify-js</code><a href="#uglify-js" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<pre><code class="hljs language-bash"><span class="token function">npm</span> i -D uglify-js</code></pre>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">[</span>\n  <span class="token keyword">new</span> <span class="token class-name">UglifyJsPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token comment">// Uncomment lines below for cache invalidation correctly</span>\n    <span class="token comment">// cache: true,</span>\n    <span class="token comment">// cacheKeys(defaultCacheKeys) {</span>\n    <span class="token comment">//   return Object.assign(</span>\n    <span class="token comment">//     {},</span>\n    <span class="token comment">//     defaultCacheKeys,</span>\n    <span class="token comment">//     { \'uglify-js\': require(\'uglify-js/package.json\').version },</span>\n    <span class="token comment">//   );</span>\n    <span class="token comment">// },</span>\n    <span class="token function">minify</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> sourceMap<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// https://github.com/mishoo/UglifyJS2#minify-options</span>\n      <span class="token keyword">const</span> uglifyJsOptions <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token comment">/* your `uglify-js` package options */</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>sourceMap<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        uglifyJsOptions<span class="token punctuation">.</span>sourceMap <span class="token operator">=</span> <span class="token punctuation">{</span>\n          content<span class="token punctuation">:</span> sourceMap<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n\n      <span class="token keyword">return</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'uglify-js\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">minify</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> uglifyJsOptions<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">]</span></code></pre>\n<h4 id="terser"><code>terser</code><a href="#terser" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<pre><code class="hljs language-bash"><span class="token function">npm</span> i -D terser</code></pre>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">[</span>\n  <span class="token keyword">new</span> <span class="token class-name">UglifyJsPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token comment">// Uncomment lines below for cache invalidation correctly</span>\n    <span class="token comment">// cache: true,</span>\n    <span class="token comment">// cacheKeys(defaultCacheKeys) {</span>\n    <span class="token comment">//   return Object.assign(</span>\n    <span class="token comment">//     {},</span>\n    <span class="token comment">//     defaultCacheKeys,</span>\n    <span class="token comment">//     { terser: require(\'terser/package.json\').version },</span>\n    <span class="token comment">//   );</span>\n    <span class="token comment">// },</span>\n    <span class="token function">minify</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> sourceMap<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// https://github.com/fabiosantoscode/terser#minify-options</span>\n      <span class="token keyword">const</span> terserOptions <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token comment">/* your `terser` package options */</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>sourceMap<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        terserOption<span class="token punctuation">.</span>sourceMap <span class="token operator">=</span> <span class="token punctuation">{</span>\n          content<span class="token punctuation">:</span> sourceMap<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n\n      <span class="token keyword">return</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'terser\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">minify</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> terserOptions<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">]</span></code></pre>\n<h3 id="undefined">undefined<a href="#undefined" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<table>\n<thead>\n<tr>\n<th align="center">Name</th>\n<th align="center">Type</th>\n<th align="center">Default</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><code>ecma</code></strong><p class="description mobile"><code>{Number}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Number}</code></td>\n<td align="center"><code>undefined</code></td>\n<td align="left">Supported ECMAScript Version (\n<code>5</code>\n, \n<code>6</code>\n, \n<code>7</code>\n or \n<code>8</code>\n). Affects \n<code>parse</code>\n, \n<code>compress</code>\n &#x26;&#x26; \n<code>output</code>\n options</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><code>warnings</code></strong><p class="description mobile"><code>{Boolean}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Boolean}</code></td>\n<td align="center"><code>false</code></td>\n<td align="left">Display Warnings</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong>undefined</strong><p class="description mobile"><code>{Object}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Object}</code></td>\n<td align="center"><code>{}</code></td>\n<td align="left">Additional Parse Options</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong>undefined</strong><p class="description mobile"><code>{Boolean\\|Object}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Boolean\\|Object}</code></td>\n<td align="center"><code>true</code></td>\n<td align="left">Additional Compress Options</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong>undefined</strong><p class="description mobile"><code>{Boolean\\|Object}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Boolean\\|Object}</code></td>\n<td align="center"><code>{inline: false}</code></td>\n<td align="left">Enable Name Mangling (See undefined for advanced setups, use with ⚠️)</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong>undefined</strong><p class="description mobile"><code>{Object}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Object}</code></td>\n<td align="center"><code>{comments: extractComments ? false : /^\\**!\\|@preserve\\|@license\\|@cc_on/,}</code></td>\n<td align="left">Additional Output Options (The defaults are optimized for best compression)</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><code>toplevel</code></strong><p class="description mobile"><code>{Boolean}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Boolean}</code></td>\n<td align="center"><code>false</code></td>\n<td align="left">Enable top level variable and function name mangling and to drop unused variables and functions</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><code>nameCache</code></strong><p class="description mobile"><code>{Object}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Object}</code></td>\n<td align="center"><code>null</code></td>\n<td align="left">Enable cache of mangled variable and property names across multiple invocations</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><code>ie8</code></strong><p class="description mobile"><code>{Boolean}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Boolean}</code></td>\n<td align="center"><code>false</code></td>\n<td align="left">Enable IE8 Support</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><code>keep_classnames</code></strong><p class="description mobile"><code>{Boolean}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Boolean}</code></td>\n<td align="center"><code>undefined</code></td>\n<td align="left">Enable prevent discarding or mangling of class names</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><code>keep_fnames</code></strong><p class="description mobile"><code>{Boolean}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Boolean}</code></td>\n<td align="center"><code>false</code></td>\n<td align="left">Enable prevent discarding or mangling of function names. Useful for code relying on \n<code>Function.prototype.name</code>\n. If the top level minify option \n<code>keep_classnames</code>\n is \n<code>undefined</code>\n it will be overriden with the value of the top level minify option \n<code>keep_fnames</code></td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><code>safari10</code></strong><p class="description mobile"><code>{Boolean}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Boolean}</code></td>\n<td align="center"><code>false</code></td>\n<td align="left">Enable work around Safari 10/11 bugs in loop scoping and \n<code>await</code></td>\n</tr>\n</tbody>\n</table>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">[</span>\n  <span class="token keyword">new</span> <span class="token class-name">UglifyJsPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    uglifyOptions<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      ecma<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">,</span>\n      warnings<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      parse<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token operator">...</span>options<span class="token punctuation">}</span><span class="token punctuation">,</span>\n      compress<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token operator">...</span>options<span class="token punctuation">}</span><span class="token punctuation">,</span>\n      mangle<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        <span class="token operator">...</span>options<span class="token punctuation">,</span>\n        properties<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          <span class="token comment">// mangle property options</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      output<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        comments<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n        beautify<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n        <span class="token operator">...</span>options\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      toplevel<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      nameCache<span class="token punctuation">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>\n      ie8<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      keep_classnames<span class="token punctuation">:</span> undefined<span class="token punctuation">,</span>\n      keep_fnames<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      safari10<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">]</span></code></pre>\n<h3 id="extractcomments"><code>extractComments</code><a href="#extractcomments" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<h4 id="boolean-2"><code>{Boolean}</code><a href="#boolean-2" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p>All comments that normally would be preserved by the <code>comments</code> option will be moved to a separate file. If the original file is named <code>foo.js</code>, then the comments will be stored to <code>foo.js.LICENSE</code>.</p>\n<h4 id="regexpstring-or--functionnode-comment---boolean"><code>{RegExp|String}</code> or  <code>{Function&#x3C;(node, comment) -> {Boolean}>}</code><a href="#regexpstring-or--functionnode-comment---boolean" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p>All comments that match the given expression (resp. are evaluated to <code>true</code> by the function) will be extracted to the separate file. The <code>comments</code> option specifies whether the comment will be preserved, i.e. it is possible to preserve some comments (e.g. annotations) while extracting others or even preserving comments that have been extracted.</p>\n<h4 id="object"><code>{Object}</code><a href="#object" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<table>\n<thead>\n<tr>\n<th align="center">Name</th>\n<th align="center">Type</th>\n<th align="center">Default</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><code>condition</code></strong><p class="description mobile"><code>{Regex\\|Function}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Regex\\|Function}</code></td>\n<td align="center"><code></code>\n|Regular Expression or function (see previous point)</td>\n<td align="left"></td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><code>filename</code></strong><p class="description mobile"><code>{String\\|Function}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{String\\|Function}</code></td>\n<td align="center"><code>${file}.LICENSE</code></td>\n<td align="left">The file where the extracted comments will be stored. Can be either a \n<code>{String}</code>\n or a \n<code>{Function&#x3C;(string) -> {String}>}</code>\n, which will be given the original filename. Default is to append the suffix \n<code>.LICENSE</code>\n to the original filename</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><code>banner</code></strong><p class="description mobile"><code>{Boolean\\|String\\|Function}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Boolean\\|String\\|Function}</code></td>\n<td align="center"><code>/*! For license information please see ${filename}.js.LICENSE */</code></td>\n<td align="left">The banner text that points to the extracted file and will be added on top of the original file. Can be \n<code>false</code>\n (no banner), a \n<code>{String}</code>\n, or a \n<code>{Function&#x3C;(string) -> {String}</code>\n that will be called with the filename where extracted comments have been stored. Will be wrapped into comment</td>\n</tr>\n</tbody>\n</table>\n<h3 id="warningsfilter"><code>warningsFilter</code><a href="#warningsfilter" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">[</span>\n  <span class="token keyword">new</span> <span class="token class-name">UglifyJsPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    warningsFilter<span class="token punctuation">:</span> <span class="token punctuation">(</span>src<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">]</span></code></pre>\n<h2 id="maintainers">Maintainers<a href="#maintainers" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<table>\n  <tbody>\n    <tr>\n      <td align="center">\n        <a href="https://github.com/hulkish">\n          <img width="150" height="150" src="https://github.com/hulkish.png?size=150">\n          </br>\n          Steven Hargrove\n        </a>\n      </td>\n      <td align="center">\n        <a href="https://github.com/bebraw">\n          <img width="150" height="150" src="https://github.com/bebraw.png?v=3&s=150">\n          </br>\n          Juho Vepsäläinen\n        </a>\n      </td>\n      <td align="center">\n        <a href="https://github.com/d3viant0ne">\n          <img width="150" height="150" src="https://github.com/d3viant0ne.png?v=3&s=150">\n          </br>\n          Joshua Wiens\n        </a>\n      </td>\n      <td align="center">\n        <a href="https://github.com/michael-ciniawsky">\n          <img width="150" height="150" src="https://github.com/michael-ciniawsky.png?v=3&s=150">\n          </br>\n          Michael Ciniawsky\n        </a>\n      </td>\n      <td align="center">\n        <a href="https://github.com/evilebottnawi">\n          <img width="150" height="150" src="https://github.com/evilebottnawi.png?v=3&s=150">\n          </br>\n          Alexander Krasnoyarov\n        </a>\n      </td>\n    </tr>\n  <tbody>\n</table>\n'}});