webpackJsonp([71],{316:function(n,a,s){"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.default='<p><a href="https://npmjs.com/package/file-loader"><img src="https://img.shields.io/npm/v/file-loader.svg" alt="npm"></a>\n<a href="https://nodejs.org"><img src="https://img.shields.io/node/v/file-loader.svg" alt="node"></a>\n<a href="https://david-dm.org/webpack-contrib/file-loader"><img src="https://david-dm.org/webpack-contrib/file-loader.svg" alt="deps"></a>\n<a href="https://circleci.com/gh/webpack-contrib/file-loader"><img src="https://img.shields.io/circleci/project/github/webpack-contrib/file-loader.svg" alt="tests"></a>\n<a href="https://gitter.im/webpack/webpack"><img src="https://img.shields.io/badge/gitter-webpack%2Fwebpack-brightgreen.svg" alt="chat"></a></p>\n<p>A file loader module for webpack</p>\n<h2 id="requirements">Requirements<a href="#requirements" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>This module requires a minimum of Node v6.9.0 and works with Webpack v3 and Webpack v4.</p>\n<h2 id="getting-started">Getting Started<a href="#getting-started" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>To begin, you\'ll need to install <code>file-loader</code>:</p>\n<pre><code class="hljs language-console">$ npm install file-loader --save-dev\n</code></pre>\n<p>Import (or <code>require</code>) the target file(s) in one of the bundle\'s files:</p>\n<pre><code class="hljs language-js"><span class="token comment">// bundle file</span>\n<span class="token keyword">import</span> img <span class="token keyword">from</span> <span class="token string">\'./file.png\'</span></code></pre>\n<p>Then add the loader to your <code>webpack</code> config. For example:</p>\n<pre><code class="hljs language-js"><span class="token comment">// webpack.config.js</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.(png|jpg|gif)$/</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> <span class="token string">\'file-loader\'</span><span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>\n<p>And run <code>webpack</code> via your preferred method. This will emit <code>file.png</code> as a file\nin the output directory (with the specified naming convention, if options are\nspecified to do so) and returns the public URI of the file.</p>\n<p><em>Note: By default the filename of the resulting file is the MD5 hash of the\nfile\'s contents with the original extension of the required resource.</em></p>\n<h2 id="options">Options<a href="#options" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<h3 id="context"><code>context</code><a href="#context" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Type: <code>String</code>\nDefault: undefined</p>\n<p>Specifies a custom file context.</p>\n<pre><code class="hljs language-js"><span class="token comment">// webpack.config.js</span>\n<span class="token operator">...</span>\n<span class="token punctuation">{</span>\n  loader<span class="token punctuation">:</span> <span class="token string">\'file-loader\'</span><span class="token punctuation">,</span>\n  options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'[path][name].[ext]\'</span><span class="token punctuation">,</span>\n    context<span class="token punctuation">:</span> <span class="token string">\'\'</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token operator">...</span></code></pre>\n<h3 id="emitfile"><code>emitFile</code><a href="#emitfile" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Type: <code>Boolean</code>\nDefault: <code>true</code></p>\n<p>If true, emits a file (writes a file to the filesystem). If false, the loader\nwill return a public URI but <em>will not</em> emit the file. It is often useful to\ndisable this option for server-side packages.</p>\n<pre><code class="hljs language-js"><span class="token comment">// bundle file</span>\n<span class="token keyword">import</span> img <span class="token keyword">from</span> <span class="token string">\'./file.png\'</span></code></pre>\n<pre><code class="hljs language-js"><span class="token comment">// webpack.config.js</span>\n<span class="token operator">...</span>\n<span class="token punctuation">{</span>\n  loader<span class="token punctuation">:</span> <span class="token string">\'file-loader\'</span><span class="token punctuation">,</span>\n  options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    emitFile<span class="token punctuation">:</span> <span class="token boolean">false</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token operator">...</span></code></pre>\n<h3 id="name"><code>name</code><a href="#name" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Type: <code>String|Function</code>\nDefault: <code>\'[hash].[ext]\'</code></p>\n<p>Specifies a custom filename template for the target file(s) using the query\nparameter <code>name</code>. For example, to copy a file from your <code>context</code> directory into\nthe output directory retaining the full directory structure, you might use:</p>\n<pre><code class="hljs language-js"><span class="token comment">// webpack.config.js</span>\n<span class="token punctuation">{</span>\n  loader<span class="token punctuation">:</span> <span class="token string">\'file-loader\'</span><span class="token punctuation">,</span>\n  options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'[path][name].[ext]\'</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>\n<p>Or using a <code>Function</code>:</p>\n<pre><code class="hljs language-js"><span class="token comment">// webpack.config.js</span>\n<span class="token operator">...</span>\n<span class="token punctuation">{</span>\n  loader<span class="token punctuation">:</span> <span class="token string">\'file-loader\'</span><span class="token punctuation">,</span>\n  options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    <span class="token function">name</span> <span class="token punctuation">(</span>file<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>env <span class="token operator">===</span> <span class="token string">\'development\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token string">\'[path][name].[ext]\'</span>\n      <span class="token punctuation">}</span>\n\n      <span class="token keyword">return</span> <span class="token string">\'[hash].[ext]\'</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token operator">...</span></code></pre>\n<p><em>Note: By default the path and name you specify will output the file in that\nsame directory, and will also use the same URI path to access the file.</em></p>\n<h3 id="outputpath"><code>outputPath</code><a href="#outputpath" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Type: <code>String|Function</code>\nDefault: <code>undefined</code></p>\n<p>Specify a filesystem path where target the file(s) will be placed.</p>\n<pre><code class="hljs language-js"><span class="token comment">// webpack.config.js</span>\n<span class="token operator">...</span>\n<span class="token punctuation">{</span>\n  loader<span class="token punctuation">:</span> <span class="token string">\'file-loader\'</span><span class="token punctuation">,</span>\n  options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'[path][name].[ext]\'</span><span class="token punctuation">,</span>\n    outputPath<span class="token punctuation">:</span> <span class="token string">\'images/\'</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token operator">...</span></code></pre>\n<h3 id="publicpath"><code>publicPath</code><a href="#publicpath" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Type: <code>String|Function</code>\nDefault: undefined</p>\n<p>Specifies a custom public path for the target file(s).</p>\n<pre><code class="hljs language-js"><span class="token comment">// webpack.config.js</span>\n<span class="token operator">...</span>\n<span class="token punctuation">{</span>\n  loader<span class="token punctuation">:</span> <span class="token string">\'file-loader\'</span><span class="token punctuation">,</span>\n  options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'[path][name].[ext]\'</span><span class="token punctuation">,</span>\n    publicPath<span class="token punctuation">:</span> <span class="token string">\'assets/\'</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token operator">...</span></code></pre>\n<h3 id="regexp"><code>regExp</code><a href="#regexp" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Type: <code>RegExp</code>\nDefault: <code>undefined</code></p>\n<p>Specifies a Regular Expression to one or many parts of the target file path.\nThe capture groups can be reused in the <code>name</code> property using <code>[N]</code>\nundefined.</p>\n<pre><code class="hljs language-js"><span class="token keyword">import</span> img <span class="token keyword">from</span> <span class="token string">\'./customer01/file.png\'</span></code></pre>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">{</span>\n  loader<span class="token punctuation">:</span> <span class="token string">\'file-loader\'</span><span class="token punctuation">,</span>\n  options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    regExp<span class="token punctuation">:</span> <span class="token regex">/\\/([a-z0-9]+)\\/[a-z0-9]+\\.png$/</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'[1]-[name].[ext]\'</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>\n<p><em>Note: If <code>[0]</code> is used, it will be replaced by the entire tested string,\nwhereas <code>[1]</code> will contain the first capturing parenthesis of your regex and so\non...</em></p>\n<h3 id="userelativepath"><code>useRelativePath</code><a href="#userelativepath" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Type: <code>Boolean</code>\nDefault: <code>false</code></p>\n<p>Specifies whether or not to generate a relative URI for each target file context.</p>\n<pre><code class="hljs language-js"><span class="token comment">// webpack.config.js</span>\n<span class="token punctuation">{</span>\n  loader<span class="token punctuation">:</span> <span class="token string">\'file-loader\'</span><span class="token punctuation">,</span>\n  options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    useRelativePath<span class="token punctuation">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">"production"</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>\n<h2 id="placeholders">Placeholders<a href="#placeholders" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<h3 id="ext"><code>[ext]</code><a href="#ext" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Type: <code>String</code>\nDefault: <code>file.extname</code></p>\n<p>The file extension of the target file/resource.</p>\n<h3 id="hash"><code>[hash]</code><a href="#hash" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Type: <code>String</code>\nDefault: <code>\'md5\'</code></p>\n<p>Specifies the hash method to use for hashing the file content. See\nundefined.</p>\n<h3 id="n"><code>[N]</code><a href="#n" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Type: <code>String</code>\nDefault: <code>undefined</code></p>\n<p>The n-th match obtained from matching the current file name against the regExp</p>\n<h3 id="name-1"><code>[name]</code><a href="#name-1" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Type: <code>String</code>\nDefault: <code>file.basename</code></p>\n<p>The basename of the file/resource.</p>\n<h3 id="path"><code>[path]</code><a href="#path" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Type: <code>String</code>\nDefault: <code>file.dirname</code></p>\n<p>The path of the resource relative to the webpack/config context.</p>\n<h2 id="hashes">Hashes<a href="#hashes" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>Custom hashes can be used by specifying a hash with the following format:\n<code>[&#x3C;hashType>:hash:&#x3C;digestType>:&#x3C;length>]</code>.</p>\n<h3 id="digesttype"><code>digestType</code><a href="#digesttype" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Type: <code>String</code>\nDefault: <code>\'hex\'</code></p>\n<p>The undefined that the\nhash function should use. Valid values include: base26, base32, base36,\nbase49, base52, base58, base62, base64, and hex.</p>\n<h3 id="hashtype"><code>hashType</code><a href="#hashtype" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Type: <code>String</code>\nDefault: <code>\'md5\'</code></p>\n<p>The type of hash that the has function should use. Valid values include: md5,\nsha1, sha256, and sha512.</p>\n<h3 id="length"><code>length</code><a href="#length" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Type: <code>Number</code>\nDefault: <code>9999</code></p>\n<p>Users may also specify a length for the computed hash.</p>\n<h2 id="examples">Examples<a href="#examples" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>The following examples show how one might use <code>file-loader</code> and what the result\nwould be.</p>\n<pre><code class="hljs language-js"><span class="token comment">// bundle file</span>\n<span class="token keyword">import</span> png <span class="token keyword">from</span> <span class="token string">\'image.png\'</span></code></pre>\n<pre><code class="hljs language-js"><span class="token comment">// webpack.config.js</span>\n<span class="token punctuation">{</span>\n  loader<span class="token punctuation">:</span> <span class="token string">\'file-loader\'</span><span class="token punctuation">,</span>\n  options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'dirname/[hash].[ext]\'</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>\n<pre><code class="hljs language-bash"><span class="token comment"># result</span>\ndirname/0dcbbaa701328ae351f.png</code></pre>\n<hr>\n<pre><code class="hljs language-js"><span class="token comment">// webpack.config.js</span>\n<span class="token punctuation">{</span>\n  loader<span class="token punctuation">:</span> <span class="token string">\'file-loader\'</span><span class="token punctuation">,</span>\n  options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'[sha512:hash:base64:7].[ext]\'</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>\n<pre><code class="hljs language-bash"><span class="token comment"># result</span>\ngdyb21L.png</code></pre>\n<hr>\n<pre><code class="hljs language-js"><span class="token comment">// bundle file</span>\n<span class="token keyword">import</span> png <span class="token keyword">from</span> <span class="token string">\'path/to/file.png\'</span></code></pre>\n<pre><code class="hljs language-js"><span class="token comment">// webpack.config.js</span>\n<span class="token punctuation">{</span>\n  loader<span class="token punctuation">:</span> <span class="token string">\'file-loader\'</span><span class="token punctuation">,</span>\n  options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'[path][name].[ext]?[hash]\'</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>\n<pre><code class="hljs language-bash"><span class="token comment"># result</span>\npath/to/file.png?e43b20c069c4a01867c31e98cbce33c9</code></pre>\n<h2 id="contributing">Contributing<a href="#contributing" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>Please take a moment to read our contributing guidelines if you haven\'t yet done so.</p>\n<h4 id="undefined">undefined<a href="#undefined" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<h2 id="license">License<a href="#license" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<h4 id="undefined-1">undefined<a href="#undefined-1" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n'}});