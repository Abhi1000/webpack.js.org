webpackJsonp([42],{345:function(n,s,a){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.default='<img src="https://i.imgur.com/HZZG8wr.jpg" width="1358" alt="workerize-loader">\n<blockquote>\n<p>A webpack loader that moves a module and its dependencies into a Web Worker, automatically reflecting exported functions as asynchronous proxies.</p>\n</blockquote>\n<ul>\n<li>Bundles a tiny, purpose-built RPC implementation into your app</li>\n<li>If exported module methods are already async, signature is unchanged</li>\n<li>Supports synchronous and asynchronous worker functions</li>\n<li>Works beautifully with async/await</li>\n<li>Imported value is instantiable, just a decorated <code>Worker</code></li>\n</ul>\n<h2 id="install">Install<a href="#install" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<pre><code class="hljs language-sh">npm install -D workerize-loader\n</code></pre>\n<h3 id="usage">Usage<a href="#usage" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><strong>worker.js</strong>:</p>\n<pre><code class="hljs language-js"><span class="token comment">// block for `time` ms, then return the number of loops we could run in that time:</span>\n<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">expensive</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t<span class="token keyword">let</span> start <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n\t\tcount <span class="token operator">=</span> <span class="token number">0</span>\n\t<span class="token keyword">while</span> <span class="token punctuation">(</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start <span class="token operator">&#x3C;</span> time<span class="token punctuation">)</span> count<span class="token operator">++</span>\n\t<span class="token keyword">return</span> count\n<span class="token punctuation">}</span></code></pre>\n<p><strong>index.js</strong>: <em>(our demo)</em></p>\n<pre><code class="hljs language-js"><span class="token keyword">import</span> worker <span class="token keyword">from</span> <span class="token string">\'workerize-loader!./worker\'</span>\n\n<span class="token keyword">let</span> instance <span class="token operator">=</span> <span class="token function">worker</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// `new` is optional</span>\n\ninstance<span class="token punctuation">.</span><span class="token function">expensive</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span> count <span class="token operator">=></span> <span class="token punctuation">{</span>\n\tconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`Ran </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>count<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> loops`</span></span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre>\n<h3 id="credit">Credit<a href="#credit" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>The inner workings here are heavily inspired by undefined. It\'s worth a read!</p>\n<h3 id="license">License<a href="#license" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>undefined Â© undefined</p>\n'}});