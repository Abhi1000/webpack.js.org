webpackJsonp([13],{374:function(n,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default='<p>Prevent generation of modules for <code>import</code> or <code>require</code> calls matching the following regular expressions:</p>\n<ul>\n<li><code>requestRegExp</code> A RegExp to test the request against.</li>\n<li><code>contextRegExp</code> (optional) A RegExp to test the context (directory) against.</li>\n</ul>\n<pre><code class="hljs language-js"><span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>IgnorePlugin</span><span class="token punctuation">(</span>requestRegExp<span class="token punctuation">,</span> <span class="token punctuation">[</span>contextRegExp<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p>The following examples demonstrate a few ways this plugin can be used.</p>\n<h2 id="ignore-moment-locales">Ignore Moment Locales<a href="#ignore-moment-locales" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>As of <a href="https://momentjs.com/">moment</a> 2.18, all locales are bundled together with the core library (see <a href="https://github.com/moment/moment/issues/2373">this GitHub issue</a>). You can use the <code>IgnorePlugin</code> to stop any locale being bundled with moment:</p>\n<pre><code class="hljs language-js"><span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>IgnorePlugin</span><span class="token punctuation">(</span><span class="token regex">/^\\.\\/locale$/</span><span class="token punctuation">,</span> <span class="token regex">/moment$/</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n'}});